name: Unit Tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]
  
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Intel oneAPI
        if: matrix.os == 'ubuntu-latest'
        run: |
          curl -fsSL https://registrationcenter-download.intel.com/akdlm/irc_nas/18416/l_BaseKit_p_2022.2.0.179_offline.sh -o oneAPI_BaseKit.sh
          chmod +x oneAPI_BaseKit.sh
          echo "Installing Intel oneAPI, this might take a while..."
          sudo ./oneAPI_BaseKit.sh -s --eula accept --install-dir /opt/intel/oneapi --action install
          rm oneAPI_BaseKit.sh
          echo 'source /opt/intel/oneapi/setvars.sh' >> $GITHUB_ENV
    
      - name: Run unit tests with coverage
        if: matrix.os == 'windows-latest'
        run: pytest . -v --cov=floodmodeller_api --cov-fail-under=79
    
      - name: Run unit tests without coverage
        if: matrix.os == 'ubuntu-latest'
        run: pytest . -v